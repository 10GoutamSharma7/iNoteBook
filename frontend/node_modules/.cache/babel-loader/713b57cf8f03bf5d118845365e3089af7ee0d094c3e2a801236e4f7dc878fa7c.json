{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\7gaut\\\\OneDrive\\\\Desktop\\\\React\\\\Mynotebook\\\\inotebook\\\\frontend\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./note.Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [{\n    _id: \"68873ed279b9d69e9247d0ef\",\n    user: \"688611a9ff7ecd25f371e320\",\n    title: \"My Day Title\",\n    description: \"Please Wake Meeeeeeeee up early\",\n    tag: \"personal\",\n    date: \"2025-07-28T09:11:46.440Z\",\n    __v: 0\n  }];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Get All Notes\n  const getNotes = async () => {\n    // API CALL\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  // Add a Note\n  const addNote = async (title, description, tag) => {\n    // API CALL\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      // Automatically converted to \"username=example&password=password\"\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    // using concat method to add instead of push\n    setNotes(notes.concat(note));\n  };\n\n  // Delete a Note\n  const deleteNote = async id => {\n    // API CALL\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    console.log(\"Deleted the Note: \" + id);\n    const newNote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNote);\n  };\n\n  // Edit a Note\n  const editNote = async (id, title, description, tag) => {\n    // API CALL\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      getNotes,\n      addNote,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","_id","user","title","description","tag","date","__v","notes","setNotes","getNotes","response","fetch","method","headers","localStorage","getItem","json","console","log","addNote","body","JSON","stringify","note","concat","deleteNote","id","newNote","filter","editNote","newNotes","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/7gaut/OneDrive/Desktop/React/Mynotebook/inotebook/frontend/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NoteContext from \"./note.Context\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const notesInitial = [\r\n    {\r\n      _id: \"68873ed279b9d69e9247d0ef\",\r\n      user: \"688611a9ff7ecd25f371e320\",\r\n      title: \"My Day Title\",\r\n      description: \"Please Wake Meeeeeeeee up early\",\r\n      tag: \"personal\",\r\n      date: \"2025-07-28T09:11:46.440Z\",\r\n      __v: 0,\r\n    },\r\n  ];\r\n\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  // Get All Notes\r\n  const getNotes = async () => {\r\n    // API CALL\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n    setNotes(json);\r\n  };\r\n\r\n\r\n\r\n\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    // API CALL\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      // Automatically converted to \"username=example&password=password\"\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const note = await response.json();\r\n    // using concat method to add instead of push\r\n    setNotes(notes.concat(note));\r\n  };\r\n\r\n\r\n\r\n\r\n  // Delete a Note\r\n  const deleteNote = async (id) => {\r\n    // API CALL\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n\r\n    console.log(\"Deleted the Note: \" + id);\r\n    const newNote = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNote);\r\n  };\r\n\r\n\r\n\r\n\r\n  // Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    // API CALL\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n    \r\n    let newNotes = JSON.parse(JSON.stringify(notes));                                \r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        element.title = title;\r\n        element.description = description;\r\n        element.tag = tag;\r\n        break;\r\n      }\r\n    }\r\n    setNotes(newNotes);\r\n  };\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, getNotes, addNote, deleteNote, editNote }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}